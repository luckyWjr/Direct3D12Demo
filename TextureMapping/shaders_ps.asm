//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer passData
// {
//
//   float4x4 viewMatrix;               // Offset:    0 Size:    64 [unused]
//   float4x4 projectMatrix;            // Offset:   64 Size:    64 [unused]
//   float3 cameraPositionInWorld;      // Offset:  128 Size:    12
//   float padding0;                    // Offset:  140 Size:     4 [unused]
//   float4 ambientLight;               // Offset:  144 Size:    16
//   
//   struct Light
//   {
//       
//       float3 strength;               // Offset:  160
//       float falloffStart;            // Offset:  172
//       float3 direction;              // Offset:  176
//       float falloffEnd;              // Offset:  188
//       float3 position;               // Offset:  192
//       float spotPower;               // Offset:  204
//
//   } lights[16];                      // Offset:  160 Size:   768
//
// }
//
// cbuffer materialData
// {
//
//   float4 albedo;                     // Offset:    0 Size:    16
//   float3 fresnelR0;                  // Offset:   16 Size:    12
//   float roughness;                   // Offset:   28 Size:     4
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      ID      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- ------- -------------- ------
// anisotropicWrapSampler            sampler      NA          NA      S0             s4      1 
// albedoTexture                     texture  float4          2d      T0             t0      1 
// passData                          cbuffer      NA          NA     CB0            cb0      1 
// materialData                      cbuffer      NA          NA     CB1            cb2      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// POSITION                 0   xyz         1     NONE   float   xyz 
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_1
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[0:0][12], immediateIndexed, space=0
dcl_constantbuffer CB1[2:2][2], immediateIndexed, space=0
dcl_sampler S0[4:4], mode_default, space=0
dcl_resource_texture2d (float,float,float,float) T0[0:0], space=0
dcl_input_ps linear v1.xyz
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xy
dcl_output o0.xyzw
dcl_temps 4
sample r0.xyzw, v3.xyxx, T0[0].xyzw, S0[4]
mul r0.xyzw, r0.xyzw, CB1[2][0].xyzw
dp3 r1.x, v2.xyzx, v2.xyzx
rsq r1.x, r1.x
mul r1.xyz, r1.xxxx, v2.xyzx
add r2.xyz, -v1.xyzx, CB0[0][8].xyzx
dp3 r1.w, r2.xyzx, r2.xyzx
rsq r1.w, r1.w
dp3 r2.w, -CB0[0][11].xyzx, r1.xyzx
max r2.w, r2.w, l(0.000000)
mul r3.xyz, r2.wwww, CB0[0][10].xyzx
mul r2.w, CB1[2][1].w, CB1[2][1].w
mad r2.xyz, r2.xyzx, r1.wwww, -CB0[0][11].xyzx
dp3 r1.w, r2.xyzx, r2.xyzx
rsq r1.w, r1.w
mul r2.xyz, r1.wwww, r2.xyzx
dp3_sat r1.x, r2.xyzx, r1.xyzx
mul r1.y, r2.w, r2.w
max r1.y, r1.y, l(0.000100)
div r1.y, l(2.000000), r1.y
add r1.y, r1.y, l(-2.000000)
max r1.y, r1.y, l(0.000100)
add r1.z, r1.y, l(2.000000)
mul r1.z, r1.z, l(0.159236)
log r1.x, r1.x
mul r1.x, r1.x, r1.y
exp r1.x, r1.x
mul r1.x, r1.z, r1.x
dp3_sat r1.y, r2.xyzx, -CB0[0][11].xyzx
add r1.y, -r1.y, l(1.000000)
add r2.xyz, -CB1[2][1].xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mul r1.z, r1.y, r1.y
mul r1.z, r1.z, r1.z
mul r1.y, r1.y, r1.z
mad r1.yzw, r2.xxyz, r1.yyyy, CB1[2][1].xxyz
mad r1.xyz, r1.yzwy, r1.xxxx, r0.xyzx
mul r1.xyz, r3.xyzx, r1.xyzx
mad o0.xyz, CB0[0][9].xyzx, r0.xyzx, r1.xyzx
mov o0.w, r0.w
ret 
// Approximately 40 instruction slots used

//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer passData
// {
//
//   float4x4 viewMatrix;               // Offset:    0 Size:    64
//   float4x4 projectMatrix;            // Offset:   64 Size:    64
//   float3 cameraPositionInWorld;      // Offset:  128 Size:    12 [unused]
//   float padding0;                    // Offset:  140 Size:     4 [unused]
//   float4 ambientLight;               // Offset:  144 Size:    16 [unused]
//   
//   struct Light
//   {
//       
//       float3 strength;               // Offset:  160
//       float falloffStart;            // Offset:  172
//       float3 direction;              // Offset:  176
//       float falloffEnd;              // Offset:  188
//       float3 position;               // Offset:  192
//       float spotPower;               // Offset:  204
//
//   } lights[16];                      // Offset:  160 Size:   768 [unused]
//
// }
//
// cbuffer objectData
// {
//
//   float4x4 modelMatrix;              // Offset:    0 Size:    64
//   float4x4 normalMatrix;             // Offset:   64 Size:    64
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      ID      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- ------- -------------- ------
// passData                          cbuffer      NA          NA     CB0            cb0      1 
// objectData                        cbuffer      NA          NA     CB1            cb1      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// POSITION                 0   xyz         1     NONE   float   xyz 
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xy          3     NONE   float   xy  
//
vs_5_1
dcl_globalFlags refactoringAllowed | skipOptimization
dcl_constantbuffer CB0[0:0][8], immediateIndexed, space=0
dcl_constantbuffer CB1[1:1][7], immediateIndexed, space=0
dcl_input v0.xyz
dcl_input v1.xyz
dcl_input v2.xy
dcl_output_siv o0.xyzw, position
dcl_output o1.xyz
dcl_output o2.xyz
dcl_output o3.xy
dcl_temps 7
//
// Initial variable locations:
//   v0.x <- position.x; v0.y <- position.y; v0.z <- position.z; 
//   v1.x <- normal.x; v1.y <- normal.y; v1.z <- normal.z; 
//   v2.x <- uv.x; v2.y <- uv.y; 
//   o3.x <- <VSMain return value>.uv.x; o3.y <- <VSMain return value>.uv.y; 
//   o2.x <- <VSMain return value>.normalInWorld.x; o2.y <- <VSMain return value>.normalInWorld.y; o2.z <- <VSMain return value>.normalInWorld.z; 
//   o1.x <- <VSMain return value>.positionInWorld.x; o1.y <- <VSMain return value>.positionInWorld.y; o1.z <- <VSMain return value>.positionInWorld.z; 
//   o0.x <- <VSMain return value>.position.x; o0.y <- <VSMain return value>.position.y; o0.z <- <VSMain return value>.position.z; o0.w <- <VSMain return value>.position.w
//
#line 58 "C:\Users\s4748\Desktop\Direct3D12Demo-main\TextureMapping\shaders.hlsl"
mov r0.xyz, v0.xyzx
mov r0.w, l(1.000000)
dp4 r1.x, r0.xyzw, CB1[1][0].xyzw  // r1.x <- positionInWorld.x
dp4 r1.y, r0.xyzw, CB1[1][1].xyzw  // r1.y <- positionInWorld.y
dp4 r1.z, r0.xyzw, CB1[1][2].xyzw  // r1.z <- positionInWorld.z
dp4 r1.w, r0.xyzw, CB1[1][3].xyzw  // r1.w <- positionInWorld.w

#line 59
mov r1.xyz, r1.xyzx  // r1.x <- result.positionInWorld.x; r1.y <- result.positionInWorld.y; r1.z <- result.positionInWorld.z

#line 61
dp3 r0.x, v1.xyzx, CB1[1][4].xyzx  // r0.x <- result.normalInWorld.x
dp3 r0.y, v1.xyzx, CB1[1][5].xyzx  // r0.y <- result.normalInWorld.y
dp3 r0.z, v1.xyzx, CB1[1][6].xyzx  // r0.z <- result.normalInWorld.z

#line 63
mul r2.xyzw, CB0[0][0].xyzw, CB0[0][4].xxxx
mul r3.xyzw, CB0[0][1].xyzw, CB0[0][4].yyyy
add r2.xyzw, r2.xyzw, r3.xyzw
mul r3.xyzw, CB0[0][2].xyzw, CB0[0][4].zzzz
add r2.xyzw, r2.xyzw, r3.xyzw
mul r3.xyzw, CB0[0][3].xyzw, CB0[0][4].wwww
add r2.xyzw, r2.xyzw, r3.xyzw
mul r3.xyzw, CB0[0][0].xyzw, CB0[0][5].xxxx
mul r4.xyzw, CB0[0][1].xyzw, CB0[0][5].yyyy
add r3.xyzw, r3.xyzw, r4.xyzw
mul r4.xyzw, CB0[0][2].xyzw, CB0[0][5].zzzz
add r3.xyzw, r3.xyzw, r4.xyzw
mul r4.xyzw, CB0[0][3].xyzw, CB0[0][5].wwww
add r3.xyzw, r3.xyzw, r4.xyzw
mul r4.xyzw, CB0[0][0].xyzw, CB0[0][6].xxxx
mul r5.xyzw, CB0[0][1].xyzw, CB0[0][6].yyyy
add r4.xyzw, r4.xyzw, r5.xyzw
mul r5.xyzw, CB0[0][2].xyzw, CB0[0][6].zzzz
add r4.xyzw, r4.xyzw, r5.xyzw
mul r5.xyzw, CB0[0][3].xyzw, CB0[0][6].wwww
add r4.xyzw, r4.xyzw, r5.xyzw
mul r5.xyzw, CB0[0][0].xyzw, CB0[0][7].xxxx
mul r6.xyzw, CB0[0][1].xyzw, CB0[0][7].yyyy
add r5.xyzw, r5.xyzw, r6.xyzw
mul r6.xyzw, CB0[0][2].xyzw, CB0[0][7].zzzz
add r5.xyzw, r5.xyzw, r6.xyzw
mul r6.xyzw, CB0[0][3].xyzw, CB0[0][7].wwww
add r5.xyzw, r5.xyzw, r6.xyzw
dp4 r2.x, r1.xyzw, r2.xyzw  // r2.x <- result.position.x
dp4 r2.y, r1.xyzw, r3.xyzw  // r2.y <- result.position.y
dp4 r2.z, r1.xyzw, r4.xyzw  // r2.z <- result.position.z
dp4 r2.w, r1.xyzw, r5.xyzw  // r2.w <- result.position.w

#line 64
mov r3.xy, v2.xyxx  // r3.x <- result.uv.x; r3.y <- result.uv.y

#line 66
mov o0.xyzw, r2.xyzw
mov o1.xyz, r1.xyzx
mov o2.xyz, r0.xyzx
mov o3.xy, r3.xyxx
ret 
// Approximately 48 instruction slots used
